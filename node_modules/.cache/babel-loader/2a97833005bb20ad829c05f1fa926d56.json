{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Justin\\\\desktop\\\\Web Development\\\\ccar\\\\src\\\\components\\\\CcarTableRight2012.jsx\";\nimport styled from \"styled-components\";\nimport { Value, Scaling, InterimType, PeriodDate, Unit, FinancialConcept, TOS, DataClassification, EntityID, ExerciseQuarter, ACD } from '../data/CcarData2012';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  width: 100%;\n`;\n_c = Container;\nconst Table = styled.table`\n  font-size: 20px;\n  width: 95%;\n  border-collapse: collapse;\n  table-layout:fixed;\n\n  >tbody {\n\n    >tr {\n      font-size: 15px;\n      line-height: 25px;\n      border: 1px solid #ddd;\n\n      &:nth-child(even) {\n        background-color: #f2f2f2;\n      }\n      \n      &:hover {\n        background-color: #ddd;\n      }\n\n      >th {\n        background-color: #00447c;\n        color: white;\n        font-size: 15px;\n        padding: 5px;\n      }\n\n      >td {\n        text-align: center;\n        border: 1px solid #ddd;\n      }\n    }      \n  }\n`;\n_c2 = Table;\nconst FCrow = styled.td`\n    font-size: 11px;\n    line-height: 25px;\n    border: 1px solid #ddd;\n`;\n_c3 = FCrow;\n\nconst CcarTableRight2012 = _ref => {\n  let {\n    data\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      children: data === \"Value\" ? /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"4\",\n            children: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), Value.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: item.map(i => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: i\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 23\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 19\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }, this) : data === \"Scaling\" ? /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"4\",\n            children: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 19\n        }, this), Scaling.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: item.map(i => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: i\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this) : data === \"Interim Type\" ? /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"4\",\n            children: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), InterimType.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: item.map(i => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: i\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 27\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 23\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this) : data === \"Period Date\" ? /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"4\",\n            children: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), PeriodDate.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: item.map(i => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: i\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 27\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 23\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this) : data === \"Unit\" ? /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"4\",\n            children: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), Unit.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: item.map(i => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: i\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 27\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 23\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this) : data === \"Financial Concept\" ? /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"4\",\n            children: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), FinancialConcept.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: item.map(i => /*#__PURE__*/_jsxDEV(FCrow, {\n            children: i\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 27\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 23\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this) : data === \"Types of Scenario\" ? /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"4\",\n            children: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), TOS.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: item.map(i => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: i\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 27\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 23\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this) : data === \"Data Classification\" ? /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"4\",\n            children: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), DataClassification.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: item.map(i => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: i\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 27\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 23\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this) : data === \"Entity ID\" ? /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"4\",\n            children: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }, this), EntityID.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: item.map(i => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: i\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 27\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 23\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this) : data === \"Exercise Quarter\" ? /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"4\",\n            children: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), ExerciseQuarter.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: item.map(i => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: i\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 27\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 23\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this) : data === \"Assessment Coverage Date\" ? /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"th\", {\n            colSpan: \"4\",\n            children: data\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), ACD.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: item.map(i => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: i\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 27\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 23\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_c4 = CcarTableRight2012;\nexport default CcarTableRight2012;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Table\");\n$RefreshReg$(_c3, \"FCrow\");\n$RefreshReg$(_c4, \"CcarTableRight2012\");","map":{"version":3,"sources":["C:/Users/Justin/desktop/Web Development/ccar/src/components/CcarTableRight2012.jsx"],"names":["styled","Value","Scaling","InterimType","PeriodDate","Unit","FinancialConcept","TOS","DataClassification","EntityID","ExerciseQuarter","ACD","Container","div","Table","table","FCrow","td","CcarTableRight2012","data","map","item","i"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\r\nimport { \r\n  Value, \r\n  Scaling, \r\n  InterimType,\r\n  PeriodDate,\r\n  Unit,\r\n  FinancialConcept,\r\n  TOS,\r\n  DataClassification,\r\n  EntityID,\r\n  ExerciseQuarter,\r\n  ACD \r\n} from '../data/CcarData2012';\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n`\r\nconst Table = styled.table`\r\n  font-size: 20px;\r\n  width: 95%;\r\n  border-collapse: collapse;\r\n  table-layout:fixed;\r\n\r\n  >tbody {\r\n\r\n    >tr {\r\n      font-size: 15px;\r\n      line-height: 25px;\r\n      border: 1px solid #ddd;\r\n\r\n      &:nth-child(even) {\r\n        background-color: #f2f2f2;\r\n      }\r\n      \r\n      &:hover {\r\n        background-color: #ddd;\r\n      }\r\n\r\n      >th {\r\n        background-color: #00447c;\r\n        color: white;\r\n        font-size: 15px;\r\n        padding: 5px;\r\n      }\r\n\r\n      >td {\r\n        text-align: center;\r\n        border: 1px solid #ddd;\r\n      }\r\n    }      \r\n  }\r\n`\r\nconst FCrow = styled.td`\r\n    font-size: 11px;\r\n    line-height: 25px;\r\n    border: 1px solid #ddd;\r\n`\r\nconst CcarTableRight2012 = ({data}) => {\r\n  return (\r\n        <Container>\r\n            <Table>\r\n            {data === \"Value\" ? \r\n              <tbody>\r\n                <tr>\r\n                  <th colSpan={\"4\"}>{data}</th>\r\n                </tr>\r\n                {Value.map((item) => (\r\n                  <tr>\r\n                    {item.map((i) => (\r\n                      <td>{i}</td>   \r\n                    ))}\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n\r\n              :data === \"Scaling\" ?\r\n                <tbody>\r\n                  <tr>\r\n                    <th colSpan={\"4\"}>{data}</th>\r\n                  </tr>\r\n                  {Scaling.map((item) => (\r\n                    <tr>\r\n                      {item.map((i) => (\r\n                        <td>{i}</td>   \r\n                      ))}\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n\r\n              :data === \"Interim Type\" ?\r\n                <tbody>\r\n                    <tr>\r\n                      <th colSpan={\"4\"}>{data}</th>\r\n                    </tr>\r\n                    {InterimType.map((item) => (\r\n                      <tr>\r\n                        {item.map((i) => (\r\n                          <td>{i}</td>   \r\n                        ))}\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              :data === \"Period Date\" ?\r\n                <tbody>\r\n                    <tr>\r\n                      <th colSpan={\"4\"}>{data}</th>\r\n                    </tr>\r\n                    {PeriodDate.map((item) => (\r\n                      <tr>\r\n                        {item.map((i) => (\r\n                          <td>{i}</td>   \r\n                        ))}\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              :data === \"Unit\" ?\r\n                <tbody>\r\n                    <tr>\r\n                      <th colSpan={\"4\"}>{data}</th>\r\n                    </tr>\r\n                    {Unit.map((item) => (\r\n                      <tr>\r\n                        {item.map((i) => (\r\n                          <td>{i}</td>   \r\n                        ))}\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              :data === \"Financial Concept\" ?\r\n                <tbody>\r\n                    <tr>\r\n                      <th colSpan={\"4\"}>{data}</th>\r\n                    </tr>\r\n                    {FinancialConcept.map((item) => (\r\n                      <tr>\r\n                        {item.map((i) => (\r\n                          <FCrow>{i}</FCrow>   \r\n                        ))}\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              :data === \"Types of Scenario\" ?\r\n                <tbody>\r\n                    <tr>\r\n                      <th colSpan={\"4\"}>{data}</th>\r\n                    </tr>\r\n                    {TOS.map((item) => (\r\n                      <tr>\r\n                        {item.map((i) => (\r\n                          <td>{i}</td>   \r\n                        ))}\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              :data === \"Data Classification\" ?\r\n                <tbody>\r\n                    <tr>\r\n                      <th colSpan={\"4\"}>{data}</th>\r\n                    </tr>\r\n                    {DataClassification.map((item) => (\r\n                      <tr>\r\n                        {item.map((i) => (\r\n                          <td>{i}</td>   \r\n                        ))}\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              :data === \"Entity ID\" ?\r\n                <tbody>\r\n                    <tr>\r\n                      <th colSpan={\"4\"}>{data}</th>\r\n                    </tr>\r\n                    {EntityID.map((item) => (\r\n                      <tr>\r\n                        {item.map((i) => (\r\n                          <td>{i}</td>   \r\n                        ))}\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              :data === \"Exercise Quarter\" ?\r\n                <tbody>\r\n                    <tr>\r\n                      <th colSpan={\"4\"}>{data}</th>\r\n                    </tr>\r\n                    {ExerciseQuarter.map((item) => (\r\n                      <tr>\r\n                        {item.map((i) => (\r\n                          <td>{i}</td>   \r\n                        ))}\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              :data === \"Assessment Coverage Date\" ?\r\n                <tbody>\r\n                    <tr>\r\n                      <th colSpan={\"4\"}>{data}</th>\r\n                    </tr>\r\n                    {ACD.map((item) => (\r\n                      <tr>\r\n                        {item.map((i) => (\r\n                          <td>{i}</td>   \r\n                        ))}\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              : null\r\n              }\r\n\r\n                </Table>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CcarTableRight2012;\r\n"]},"metadata":{},"sourceType":"module"}